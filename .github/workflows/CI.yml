name: CI

on:
  push:
    branches:
      - main
      - develop
      - preproduction
  pull_request:
    branches:
      - main
      - develop
      - preproduction

jobs:
  run-lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Caching dependencies
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.OS }}-build-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-build-
            ${{ runner.OS }}-
      - name: Install dependencies
        run: yarn

      - name: Check lint
        run: yarn lint

  run-jest:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Caching dependencies
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.OS }}-build-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-build-
            ${{ runner.OS }}-

      - name: Install dependencies
        run: yarn

      - name: Run tests
        run: yarn test

  run-codecov:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Caching dependencies
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.OS }}-build-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-build-
            ${{ runner.OS }}-

      - name: Install dependencies
        run: yarn

      - name: Generate coverage report
        run: yarn test

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3.0.0
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true

  run-cypress:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Caching dependencies
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.OS }}-build-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-build-
            ${{ runner.OS }}-

      - name: Install dependencies
        run: yarn

      - name: Install mkcert
        run: |
          sudo apt install libnss3-tools
          brew install mkcert
          mkcert -install
          mkcert localhost

      - name: Generate environment json file
        run: |
          echo '{' >> cypress.env.json
          echo '"user-email":"$CYPRESS_USER_EMAIL",' >> cypress.env.json
          echo '"user-password":"$CYPRESS_USER_PASSWORD"' >> cypress.env.json
          echo '}' >> cypress.env.json
        env:
          CYPRESS_USER_EMAIL: ${{ secrets.CYPRESS_USER_EMAIL }}
          CYPRESS_USER_PASSWORD: ${{ secrets.CYPRESS_USER_PASSWORD }}

      - name: E2E test - chrome
        uses: cypress-io/github-action@v2
        with:
          install: false
          start: yarn httpsdev
          browser: chrome
          record: true
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          GITHUB_TOKEN: ${{ secrets.HYESUNG_GITHUB_TOKEN }}
